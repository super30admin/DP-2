//Time: O(m*n) where m is amount and n are no of coins
//Space: O(m*n)
//Executed on leetcode : yes
class Solution {
    public int change(int amount, int[] coins) {
        if(coins == null) return 0;
        int m=coins.length+1;
        int n=amount+1;
       int[][] dp=new int[m][n];
        for(int i=0;i<m;i++)
        dp[i][0]=1;
        // for(int j=0;j<n;j++)
        // dp[0][j]=0;
         
        for(int i=1;i<m;i++)
        {
            for(int j=1;j<n;j++)
            {
                if(j<coins[i-1])
                {
                    dp[i][j]=dp[i-1][j];
                }
                else
                dp[i][j]=dp[i-1][j]+dp[i][j-coins[i-1]];
            }
        }
   
        return dp[m-1][n-1];
    }
    
}
